# Generated by Django 5.2.4 on 2025-08-30 14:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name="League",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="leagues",
                        to="api.country",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Club",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=300)),
                (
                    "fbref_id",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                (
                    "league",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clubs",
                        to="api.league",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=500)),
                ("fbref_id", models.CharField(max_length=100, unique=True)),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="club_player",
                        to="api.club",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Season",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("season", models.CharField(max_length=9)),
                (
                    "league",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="league_season",
                        to="api.league",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Goalkeeper",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("age", models.SmallIntegerField(blank=True, null=True)),
                ("matches_played", models.IntegerField(blank=True, null=True)),
                ("minutes_played", models.IntegerField(blank=True, null=True)),
                ("goals_conceded", models.IntegerField(blank=True, null=True)),
                ("shots_faced", models.IntegerField(blank=True, null=True)),
                ("saves", models.IntegerField(blank=True, null=True)),
                ("save_percentage", models.FloatField(blank=True, null=True)),
                ("clean_sheets", models.IntegerField(blank=True, null=True)),
                ("psxg", models.FloatField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="goalkeeper_season",
                        to="api.player",
                    ),
                ),
                (
                    "season",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="season_goalkeeper",
                        to="api.season",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerSeasonStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.CharField(blank=True, max_length=20, null=True)),
                ("age", models.SmallIntegerField(blank=True, null=True)),
                ("matches_played", models.IntegerField(blank=True, null=True)),
                ("minutes_played", models.IntegerField(blank=True, null=True)),
                ("goals", models.IntegerField(blank=True, null=True)),
                ("assists", models.IntegerField(blank=True, null=True)),
                ("xg", models.FloatField(blank=True, null=True)),
                ("npxg", models.FloatField(blank=True, null=True)),
                ("prog_carries", models.IntegerField(blank=True, null=True)),
                ("shots_target", models.IntegerField(blank=True, null=True)),
                ("passes_to_final_3rd", models.IntegerField(blank=True, null=True)),
                ("passes_to_pen_area", models.IntegerField(blank=True, null=True)),
                ("shots_creation_action", models.IntegerField(blank=True, null=True)),
                ("tackles", models.IntegerField(blank=True, null=True)),
                ("tackles_won", models.IntegerField(blank=True, null=True)),
                ("interceptions", models.IntegerField(blank=True, null=True)),
                ("touches", models.IntegerField(blank=True, null=True)),
                ("take_ons", models.IntegerField(blank=True, null=True)),
                ("carries_to_final_3rd", models.IntegerField(blank=True, null=True)),
                ("carries_to_pen_area", models.IntegerField(blank=True, null=True)),
                ("yellow_cards", models.SmallIntegerField(blank=True, null=True)),
                ("red_cards", models.SmallIntegerField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_season",
                        to="api.player",
                    ),
                ),
                (
                    "season",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="season_player",
                        to="api.season",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("player", "season"), name="unique_player_season"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ClubSeasonStat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points_won", models.IntegerField()),
                ("league_position", models.IntegerField()),
                ("matches_played", models.IntegerField(blank=True, null=True)),
                ("win", models.IntegerField(blank=True, null=True)),
                ("draw", models.IntegerField(blank=True, null=True)),
                ("lost", models.IntegerField(blank=True, null=True)),
                ("goals_scored", models.IntegerField(blank=True, null=True)),
                ("goals_conceded", models.IntegerField(blank=True, null=True)),
                ("xg_created", models.FloatField(blank=True, null=True)),
                ("xg_conceded", models.FloatField(blank=True, null=True)),
                ("shots", models.IntegerField(blank=True, null=True)),
                ("shots_target", models.IntegerField(blank=True, null=True)),
                ("passes", models.IntegerField(blank=True, null=True)),
                ("passes_comp", models.IntegerField(blank=True, null=True)),
                ("passes_to_final_third", models.IntegerField(blank=True, null=True)),
                ("passes_to_pen_area", models.IntegerField(blank=True, null=True)),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="season_stats",
                        to="api.club",
                    ),
                ),
                (
                    "season",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="club_season",
                        to="api.season",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("club", "season"), name="unique_club_season"
                    )
                ],
            },
        ),
    ]
